// Code generated by MockGen. DO NOT EDIT.
// Source: operation_type.go
//
// Generated by this command:
//
//	mockgen -destination=./../../tests/mocks/mock_operation_type.go -package=mocks -source=operation_type.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	entity "transaction-routine/internal/entity"

	gomock "go.uber.org/mock/gomock"
)

// MockOpTypeService is a mock of OpTypeService interface.
type MockOpTypeService struct {
	ctrl     *gomock.Controller
	recorder *MockOpTypeServiceMockRecorder
}

// MockOpTypeServiceMockRecorder is the mock recorder for MockOpTypeService.
type MockOpTypeServiceMockRecorder struct {
	mock *MockOpTypeService
}

// NewMockOpTypeService creates a new mock instance.
func NewMockOpTypeService(ctrl *gomock.Controller) *MockOpTypeService {
	mock := &MockOpTypeService{ctrl: ctrl}
	mock.recorder = &MockOpTypeServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOpTypeService) EXPECT() *MockOpTypeServiceMockRecorder {
	return m.recorder
}

// CreateOperationType mocks base method.
func (m *MockOpTypeService) CreateOperationType(ctx context.Context, op entity.Operation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOperationType", ctx, op)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOperationType indicates an expected call of CreateOperationType.
func (mr *MockOpTypeServiceMockRecorder) CreateOperationType(ctx, op any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOperationType", reflect.TypeOf((*MockOpTypeService)(nil).CreateOperationType), ctx, op)
}

// GetAllOperationTypes mocks base method.
func (m *MockOpTypeService) GetAllOperationTypes(ctx context.Context) (entity.OperationType, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllOperationTypes", ctx)
	ret0, _ := ret[0].(entity.OperationType)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllOperationTypes indicates an expected call of GetAllOperationTypes.
func (mr *MockOpTypeServiceMockRecorder) GetAllOperationTypes(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllOperationTypes", reflect.TypeOf((*MockOpTypeService)(nil).GetAllOperationTypes), ctx)
}
